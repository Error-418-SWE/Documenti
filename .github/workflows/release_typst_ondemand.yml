name: Typst on demand

on:
  workflow_dispatch:
    inputs:
      file_name:
        description: "Nome del file (case sensitive, senza estensione)"
        type: string
        required: true
      file_path:
        description: "Path della directory (dir/subdir)"
        type: string
        required: true
      do_publish:
        description: "Compila e pubblica il PDF"
        type: boolean
        default: true
        required: false
      do_deploy:
        description: "Pubblica sul sito web"
        type: boolean
        default: true
        required: false

concurrency:
  group: ondemand-${{ inputs.file_name }}
  cancel-in-progress: true

jobs:
  retrieve:
    name: "Retrieve current version"
    if: inputs.do_publish || inputs.do_deploy
    runs-on: ubuntu-latest
    outputs:
      current_version: '${{ steps.version.outputs.current_version }}'
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      - name: Get current version
        id: version
        run: |
          echo "CURRENT_VERSION=$(head -n1 "${{ inputs.file_path }}/log.csv" | cut -d',' -f1)" >> $GITHUB_OUTPUT

  deploy:
    if: inputs.do_deploy
    needs: retrieve
    uses: Error-418-SWE/Documenti/.github/workflows/deploy_website.yml@src
    with:
      file_name: ${{ inputs.file_name }}
      file_path: ${{ inputs.file_path }}
      file_version: ${{ needs.retrieve.outputs.current_version }}

  compile:
    if: inputs.do_publish
    uses: Error-418-SWE/Documenti/.github/workflows/compile_document.yml@src
    with:
      file_name: ${{ inputs.file_name }}
      file_path: ${{ inputs.file_path }}

  publish:
    name: Publish document
    if: inputs.do_publish
    needs: [retrieve, compile]
    runs-on: ubuntu-latest
    env:
      TARGET_BRANCH: 'main'

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch
      - name: Update path
        id: publish_path
        run: echo "PUBLISH_PATH=$(dirname "${{ inputs.file_path }}")" >> $GITHUB_OUTPUT
      - name: Output
        run: |
          echo "::notice::Source path: ${{ inputs.file_path }}"
          echo "::notice::Compiled document path: ${{ steps.publish_path.outputs.PUBLISH_PATH }}"
      - name: Remove older version
        run: |
          git checkout $TARGET_BRANCH
          git rm --ignore-unmatch "${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ inputs.file_name }}*.pdf"
      - name: Grab document
        uses: actions/download-artifact@v3
        with:
          name: '${{ inputs.file_name }}.pdf'
          path: '${{ github.workspace }}/${{ steps.publish_path.outputs.PUBLISH_PATH }}'
      - name: Rename file
        run: mv -v "${{ github.workspace }}/${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ inputs.file_name }}.pdf" "${{ github.workspace }}/${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ inputs.file_name }}_v${{ needs.retrieve.outputs.current_version }}.pdf"
      - name: Publish document
        run: |
          git add "${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ inputs.file_name }}*.pdf"
          git commit -am "Publish document ${{ inputs.file_name }} (v${{ needs.retrieve.outputs.current_version }})"
          git push origin $TARGET_BRANCH

  recap:
    name: "Workflow info"
    needs: retrieve
    runs-on: ubuntu-latest
    steps:
      - name: Print to summary
        run: |
          echo "::notice::Path: ${{ inputs.file_path }}"
          echo "::notice::Name: ${{ inputs.file_name }}"
          echo "::notice::Version: ${{ needs.retrieve.outputs.current_version }} (current)"