name: Typst document workflow

on:
  #triggered when PR is (re)opened or synchronized (new commit to head)
  pull_request:
    types: [opened, reopened, synchronize, closed]
    paths:
      - '**.typ'
      - '!**template.typ'

jobs:
  fetch:
    uses: Error-418-SWE/Documenti/.github/workflows/fetch_info.yml@src

  log:
    needs: fetch
    runs-on: ubuntu-latest
    env:
      BASE_BRANCH: 'src'

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch
      - name: Checkout head branch
        if: github.event.pull_request.merged == false
        run: git checkout ${{ github.head_ref }}
      - name: Checkout base branch
        if: github.event.pull_request.merged == true
        run: git checkout $BASE_BRANCH
      - name: Create changelog if missing
        run: touch "${{ needs.fetch.outputs.file_path }}/log.csv"
      - name: Commit and push changelog
        run: |
          git add "${{ needs.fetch.outputs.file_path }}/log.csv"
          git diff-index --quiet HEAD || git commit -m "Aggiunto changelog vuoto"
      - name: Push to head branch
        if: github.event.pull_request.merged == false
        run: git push origin ${{ github.head_ref }}
      - name: Push to base branch
        if: github.event.pull_request.merged == true
        run: git push origin $BASE_BRANCH

  compile:
    needs: [fetch, log]
    uses: Error-418-SWE/Documenti/.github/workflows/compile_document.yml@src
    with:
      file_name: ${{ needs.fetch.outputs.file_name }}
      file_path: ${{ needs.fetch.outputs.file_path }}

  deploy:
    if: github.event.pull_request.merged == true
    needs: [fetch, log]
    uses: Error-418-SWE/Documenti/.github/workflows/deploy_website.yml@src
    with:
      file_name: ${{ needs.fetch.outputs.file_name }}
      file_path: ${{ needs.fetch.outputs.file_path }}

  publish:
    if: github.event.pull_request.merged == true
    needs: [fetch, compile]
    runs-on: ubuntu-latest
    env:
      TARGET_BRANCH: 'main'

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch
      - name: Update path
        id: publish_path
        run: echo "PUBLISH_PATH=$(dirname "${{ needs.fetch.outputs.file_path }}")" >> $GITHUB_OUTPUT
      - name: Output
        run: |
          echo "::notice::Old path: ${{ needs.fetch.outputs.file_path }}"
          echo "::notice::New path: ${{ steps.publish_path.outputs.PUBLISH_PATH }}"
      - name: Remove older version
        run: |
          git checkout $TARGET_BRANCH
          git rm --ignore-unmatch "${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ needs.fetch.outputs.file_name }}*.pdf"
      - name: Grab document
        uses: actions/download-artifact@v3
        with:
          name: '${{ needs.fetch.outputs.file_name }}.pdf'
          path: '${{ github.workspace }}/${{ steps.publish_path.outputs.PUBLISH_PATH }}'
      - name: Rename file
        run: mv -v "${{ github.workspace }}/${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ needs.fetch.outputs.file_name }}.pdf" "${{ github.workspace }}/${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ needs.fetch.outputs.file_name }}_v${{ needs.fetch.outputs.latest_version }}.pdf"
      - name: Publish document
        run: |
          git add "${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ needs.fetch.outputs.file_name }}*.pdf"
          git commit -am "Publish document ${{ needs.fetch.outputs.file_name }} (v${{ needs.fetch.outputs.latest_version }})"
          git push origin $TARGET_BRANCH
