name: Typst document workflow

on:
  #triggered when PR is (re)opened or synchronized (new commit to head)
  pull_request:
    types: [opened, reopened, synchronize, closed]
    paths:
      - '**.typ'
      - '!**template.typ'

jobs:
  fetch:
    uses: ggardin/Documenti/.github/workflows/info_fetcher.yml@src

  log:
    needs: fetch
    uses: ggardin/Documenti/.github/workflows/changelogger.yml@src
    with:
      path: '${{ needs.fetch.outputs.file_path }}'

  compile:
    needs: [fetch, log]
    uses: ggardin/Documenti/.github/workflows/compiler.yml@src
    with:
      name: '${{ needs.fetch.outputs.file_name }}'
      path: '${{ needs.fetch.outputs.file_path }}'

  publish:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [fetch, compile]
    env:
      TARGET_BRANCH: 'main'

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      - name: Configure Git
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch
      - name: Update path
        id: publish_path
        run: |
          echo "PUBLISH_PATH=$(dirname "${{ needs.fetch.outputs.file_path }}")" >> $GITHUB_OUTPUT
      - name: Output
        run: |
          echo "::notice::Old path: ${{ needs.fetch.outputs.file_path }}"
          echo "::notice::New path: ${{ steps.publish_path.outputs.PUBLISH_PATH }}"
      - name: Remove older version
        run: |
          git checkout $TARGET_BRANCH
          rm -f "${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ needs.fetch.outputs.file_name }}.pdf"
          git rm --ignore-unmatch "${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ needs.fetch.outputs.file_name }}.pdf"
      - name: Grab document
        uses: actions/download-artifact@v3
        with:
          name: '${{ needs.fetch.outputs.file_name }}.pdf'
          path: '${{ github.workspace }}/${{ steps.publish_path.outputs.PUBLISH_PATH }}'
      - name: Publish document
        run: |
          git add "${{ steps.publish_path.outputs.PUBLISH_PATH }}/${{ needs.fetch.outputs.file_name }}.pdf"
          git commit -am "Publish document ${{ needs.fetch.outputs.file_name }}.pdf"
          git push origin $TARGET_BRANCH
