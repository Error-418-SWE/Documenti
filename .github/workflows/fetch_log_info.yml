name: Changed log info fetcher

on:
  workflow_call:
    outputs:
      file_path:
        description: "The path to the file related to the updated changelog"
        value: ${{ jobs.fetch.outputs.file_path }}
      file_name:
        description: "The name of the file related to the update changelog"
        value: ${{ jobs.fetch.outputs.file_name }}
      current_version:
        description: "The current document version"
        value: ${{ jobs.fetch.outputs.current_version }}

jobs:
  fetch:
    name: Fetch file info
    runs-on: ubuntu-latest
    outputs:
      file_path: '${{ steps.path.outputs.file_path }}'
      file_name: '${{ steps.name.outputs.file_name }}'
      current_version: '${{ steps.version.outputs.current_version }}'

    steps:
      - name: Set up Git repository
        uses: actions/checkout@v4
      - name: Get changed file
        id: files
        uses: tj-actions/changed-files@v40
        with:
          files: |
            **.csv
      - name: Extract path
        id: path
        run: |
          FILE="${{ steps.files.outputs.all_changed_files }}"
          echo "FILE_PATH=$(dirname "$FILE")" >> $GITHUB_OUTPUT
      - name: Extract name w/o extension
        id: name
        run: |
          find "${{ steps.path.outputs.file_path }}" -type f -name "*.typ" -exec basename {} .typ \;
          echo "FILE_NAME=$(find "${{ steps.path.outputs.file_path }}" -type f -name "*.typ" -exec basename {} .typ \;)" >> $GITHUB_OUTPUT
      - name: Check number of changed files
        run: |
          if [[ ${{ steps.files.outputs.all_changed_files_count }} > 1 ]]; then
            echo "::error::More than one changelog has been modified. Aborting."
            exit 1
          fi
      - name: Get current version
        id: version
        run: |
          echo "current_version=$(head -n1 "${{ steps.path.outputs.file_path }}/log.csv" | cut -d',' -f1)" >> $GITHUB_OUTPUT
      - name: Output to summary
        run: |
          echo "::notice::Path (related to log): ${{ steps.path.outputs.file_path }}"
          echo "::notice::Name (related to log): ${{ steps.name.outputs.file_name }}"
          echo "::notice::Version: ${{ steps.version.outputs.current_version }} (current)"

